// Mocks generated by Mockito 5.4.6 from annotations
// in backbase_sesnosr_app/test/unit/di/controller_factory_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:backbase_sesnosr_app/core/di/service_locator.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ServiceLocator].
///
/// See the documentation for Mockito's code generation for more information.
class MockServiceLocator extends _i1.Mock implements _i2.ServiceLocator {
  MockServiceLocator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void register<T>(T? service) => super.noSuchMethod(
    Invocation.method(#register, [service]),
    returnValueForMissingStub: null,
  );

  @override
  T get<T>() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue: _i3.dummyValue<T>(this, Invocation.method(#get, [])),
          )
          as T);

  @override
  void reset() => super.noSuchMethod(
    Invocation.method(#reset, []),
    returnValueForMissingStub: null,
  );

  @override
  void registerServices() => super.noSuchMethod(
    Invocation.method(#registerServices, []),
    returnValueForMissingStub: null,
  );
}
